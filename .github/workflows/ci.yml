---
name: PR tests

on:
  pull_request_target:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  Build:
    name: "Build against Slackware 15"
    runs-on: self-hosted

    container:
      image: aclemons/slackware:latest-full

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Slackware 15.0 vs my -current
      run: |
        ( export REPO=$(echo "${{ github.event.pull_request.html_url }}" | sed 's/\/pull.*//')
          export REPO_BRANCH=$(echo "${{ github.head_ref }}" | sed 's/^refs\/heads\///')
          COMMIT=${COMMIT:-bcd9b22491929d9bbf7d85596484c5e5522c5294}
          cd /tmp

          mkdir init && cd init
          wget -c https://raw.githubusercontent.com/RSKYS/SBo-git/$COMMIT/system/sbotools/sbotools.SlackBuild \
                  https://raw.githubusercontent.com/RSKYS/SBo-git/$COMMIT/system/sbotools/sbotools.info \
                  https://raw.githubusercontent.com/RSKYS/SBo-git/$COMMIT/system/sbotools/slack-desc \
                  https://raw.githubusercontent.com/RSKYS/SBo-git/$COMMIT/system/sbotools/req.diff \
                  https://raw.githubusercontent.com/RSKYS/SBo-git/$COMMIT/system/sbotools/README

          export $( cat sbotools.info | \
                    grep -E "VERSION=|DOWNLOAD=" | tr -d "\"" )
          wget $DOWNLOAD

          TAG=red PKGTYPE=txz sh sbotools.SlackBuild
          upgradepkg --reinstall --install-new /tmp/sbotools-$VERSION*.t?z

          rm -rf {.git*,*}
          sbosnap fetch )

        ( export MainBranch=$(echo "${{ github.base_ref }}" | sed 's/^refs\/heads\///')
          cd /tmp/sbo/repo

          CHANGED=$(git diff --name-only remotes/origin/$MainBranch.. | awk -F/ '{print $2}' | sort -u)
          find */*/ -name "doinst.sh" -exec sed -e '1,$d' {} +

          for BASENAM in $CHANGED; do

            PKGTYPE=txz \
                  sboinstall -j3 --reinstall $BASENAM
          done )

    - name: Notify PR Thread
      if: success()
      run: |
        curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        -d '{"body": "All builds finished successfully :thumbsup:"}' \
        https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments

        curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        -H "Accept: application/vnd.github.v3+json" \
        -d '{"labels":["Success"]}' \
        https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/labels