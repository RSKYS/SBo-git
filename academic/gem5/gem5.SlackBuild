#!/bin/bash

# Slackware build script for gem5

# Copyright 2022 William PC - Seattle, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=gem5
VERSION=${VERSION:-20.1.0.5}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}


if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION

chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;


if [ "${ARM:-no}" == "yes" ]; then
  GEM5_ISA="ARM"
  SCONS_OPTS="USE_SYSTEMC=no"
fi

if [ "${MIPS:-no}" == "yes" ]; then
  GEM5_ISA="$GEM5_ISA MIPS"
fi

if [ "${POWER:-no}" == "yes" ]; then
  GEM5_ISA="$GEM5_ISA POWER"
fi

if [ "${RISCV:-no}" == "yes" ]; then
  GEM5_ISA="$GEM5_ISA RISCV"
fi

if [ "${RISCV:-no}" == "yes" ]; then
  GEM5_ISA="$GEM5_ISA SPARC"
fi

if [ ! "${X86:-yes}" == "no" ]; then
  GEM5_ISA="$GEM5_ISA X86"
elif [ -z $GEM5_ISA ]; then
  echo "At least one ISA must be enabled"
  echo "The following ISA are available"
  echo "X86 ARM MIPS POWER RISCV SPARC"
fi

if [ "${DEBUG:-no}" == "yes" ]; then
  VARIANT=debug
elif [ "${OPT:-no}" == "yes" ]; then
  VARIANT=opt
else
  VARIANT=fast
fi

for gem5_isa in $GEM5_ISA; do
  CCFLAGS_EXTRA="$SLKCFLAGS" \
  scons $SCONS_OPTS build/$gem5_isa/gem5.$VARIANT
done

INSTALL_DIR=$PKG/opt/gem5-$VERSION

# install binary
mkdir -p $INSTALL_DIR/bin
for gem5_isa in $GEM5_ISA; do
  cp -a build/$gem5_isa/gem5.$VARIANT \
        $INSTALL_DIR/bin/gem5-$gem5_isa\.$VARIANT
done

# install auxiliar files/tools
cp -a configs $INSTALL_DIR
cp -a system $INSTALL_DIR
cp -a tests $INSTALL_DIR
cp -a util $INSTALL_DIR


# Don't ship .la files:
rm -f $PKG/{,usr/}lib${LIBDIRSUFFIX}/*.la

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG -depth -type d -empty -delete || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a CODE-OF-CONDUCT.md CONTRIBUTING.md COPYING LICENSE \
       MAINTAINERS RELEASE-NOTES.md $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
