Qhull computes the convex hull, Delaunay triangulation, Voronoi
diagram, halfspace intersection about a point, furthest-site Delaunay
triangulation, and furthest-site Voronoi diagram. The source code runs
in 2-d, 3-d, 4-d, and higher dimensions. Qhull implements the
Quickhull algorithm for computing the convex hull. It handles roundoff
errors from floating point arithmetic. It computes volumes, surface
areas, and approximations to the convex hull.

Qhull does not support triangulation of non-convex surfaces, mesh
generation of non-convex objects, medium-sized inputs in 9-D and
higher, alpha shapes, weighted Voronoi diagrams, Voronoi volumes, or
constrained Delaunay triangulations,

Qhull 2015.2 introduces reentrant Qhull. It allows concurrent Qhull
runs and simplifies the C++ interface to Qhull. If you call Qhull from
your program, you should use reentrant Qhull (libqhull_r) instead of
qh_QHpointer (libqhull).

qhull is an optional dependency for the octave package.
