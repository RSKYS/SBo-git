apulse (PulseAudio emulation for ALSA)

Any app that requires pulseaudio can be run as such:

    $ apulse <program> [parameters]

PulseAudio is not required.

This script supports 3 build types, controlled by the SYSTEM
environment variable:

- SYSTEM=no is the default and recommended setting. Libraries will be
  installed in a private directory, and headers will not be
  installed. This allows apulse to coexist safely with Slackware's
  pulseaudio package. apulse will only be used via the wrapper script,
  as in the example above.

- SYSTEM=yes installs the apulse libraries to /usr/lib(64). This would
  conflict with Slackware's pulseaudio package, so only use this
  option on a system where pulseaudio is not installed. The wrapper
  script won't be required; all applications that use PulseAudio
  will use apulse instead (although compatibility isn't 100% perfect,
  so some apps may fail to run, or fail to make sound). This option
  allows running software that's been built to use PulseAudio, but
  doesn't allow compiling software to use PulseAudio.

- SYSTEM=devel is like SYSTEM=yes, plus it installs pulseaudio headers
  and pkg-config support files. This option allows you to (possibly)
  compile software that uses PulseAudio, using apulse instead. Like
  SYSTEM=yes, this option conflicts with Slackware's pulseaudio
  package. You probably don't want SYSTEM=devel; it's pretty
  niche-market. If you want to compile PulseAudio apps, you should
  really be using actual PulseAudio.

*DON'T* use SYSTEM=yes or SYSTEM=devel if you have pulseaudio
installed! You'll make a mess. If you ignore this advice, you can
probably clean up the mess by removing both apulse and pulseaudio,
then reinstalling pulseaudio. Or not, YMMV.

Note for multilib users: The SlackBuild now detects a multilib machine
and will build 32-bit libraries. Do NOT set ARCH to i586 or i686 in
the environment (leave it unset, or set it to "x86_64"), and do NOT
use 32dev.sh or linux32. If you don't want to build 32-bit libraries:

    # COMPAT32=no sh apulse.SlackBuild
