** Auto-saved playlist file **
By default, when you exit herrie your current playlist is saved to 
~/.herrie/autosave.pls.  This list is automatically loaded at the next startup of 
herrie.

*NOTE* The file will not be created unless the full path to it exists (it is not 
created by herrie).  Therefore, by default you will need to create your ~/.herrie 
folder.  The config option, playq.dumpfile, can be used to change the default 
location of the autosave.pls file.


** The Config file **
The global config file is by default at /etc/herrie.conf.
User-specific settings can be set by creating a config file at ~/.herrie/config.
The '-c' argument allows you to specify a different config file other than 
these defaults.  Please note that config settings are overidden on a per setting 
basis.  For instance, if gui.browser.defaultpath is specified in /etc/herrie.conf, 
but it is not specified in ~/.herrie/config then the setting in /etc/herrie.conf 
will be used.  The other settings that are in ~/.herrie/config would still be used.


** AutoPlay **
Herrie can be configured to begin playback at startup by setting

playq.autoplay=yes

in the config file.  Alternatively, you can run herrie with the '-p' switch.


** AutoQuit **
Herrie can be configured to automatically exit after playing the last song in the 
playlist by setting

playq.autoquit=yes

in the config file.  Alternatively, you can run herrie with the '-q' switch.
Do note that, by definition, using autoquit ignores 'repeat' since you will want 
herrie to quit after the playlist finishes.


** Skip Command Confirmation **
If you would like to skip the Yes/No confirmation dialog when quitting herrie, 
removing all files from the playlist queue, and other commands then set 

gui.input.confirm=no

in the config file.


** File Filtering **
Herrie can be configured to perform file filtering in two different ways:

1) Filter only when adding whole folders to the playlist
     vfs.ext.whitelist is used as the config option and its default is currently 
     "mp3 wav ogg".  If it is set to "" (blank) then filtering is turned off.
     Each file extension whitelisted must have *one* space in between them.  
     No '.'s are needed and the extensions are case insensitive.
   
2) Filter files always (including in file browser)
     To make non-whitelisted file types essentially invisible (works the same as 
     vfs.dir.hide_dotfiles) simply set 
     
     vfs.dir.hide_extfiles=yes
     
     in the config file.  Note, vfs.ext.whitelist is used to specify which file 
     extensions are whitelisted.  Also, like vfs.dir.hide_dotfiles, this setting 
     does not hide files within playlist files.


** Remote Control of Herrie **
Sending signals to herrie will cause it to perform certain actions.

SIGUSR1		PAUSE
SIGUSR2		NEXT
SIGRTMIN+1	PLAY
SIGRTMIN+2	STOP
SIGRTMIN+3	PREVIOUS

An included script, herriectl, sends these signals to all running instances of 
herrie with the same effective uid as the process running the script.  The 
signal sent is based upon the input argument.  The short args correspond to the 
keyboard shortcuts for controlling herrie (XMMS style play control).  Please run 
herriectl with "-h" or "--help" to see the full usage.


** Chroot Mode **
Be sure that the user you use for vfs.lockup.user is the OWNER of the folder used 
for vfs.lockup.chroot.  For some reason it is not enough to have read permissions 
through a group.  Also, note that other settings that use paths, such as 
gui.browser.defaultpath and playq.dumpfile will use the chrooted path.  You might 
need to create a .herrie folder under your chrooted folder in order to be able to 
automatically save your playlists.

Also, herrie will not work properly when using AO in chroot mode!
ALSA is now the default sound system used because of this.

Here is an example config file for using herrie in chroot mode:
# Herrie Config file for chrooted herrie
gui.browser.defaultpath=/
vfs.lockup.chroot=/mnt/MEDIA/MyMusic
vfs.lockup.user=USERNAME
playq.dumpfile=/.herrie/autosave.pls


** Using AO **
If AO is chosen as the sound output an option can be specified in the 
config file.

Config Examples of Using AO:
# Useful for KDE users
audio.output.ao.driver=arts

# For sending sound output to a remote SSH session
audio.output.ao.driver=esd
audio.output.ao.host=env_ssh


** For More Information... **
Please refer to the man page for the keyboard control bindings
and for more config options.  An online version of the man page
can be found at http://herrie.info/herrie.1
