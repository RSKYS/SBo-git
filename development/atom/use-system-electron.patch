diff -Naur a/script/build b/script/build
--- a/script/build	2017-05-25 12:32:43.000000000 -0600
+++ b/script/build	2017-06-03 14:39:33.504500031 -0600
@@ -24,7 +24,6 @@
   .wrap(yargs.terminalWidth())
   .argv
 
-const checkChromedriverVersion = require('./lib/check-chromedriver-version')
 const cleanOutputDirectory = require('./lib/clean-output-directory')
 const codeSignOnMac = require('./lib/code-sign-on-mac')
 const compressArtifacts = require('./lib/compress-artifacts')
@@ -36,7 +35,6 @@
 const generateAPIDocs = require('./lib/generate-api-docs')
 const generateMetadata = require('./lib/generate-metadata')
 const generateModuleCache = require('./lib/generate-module-cache')
-const generateStartupSnapshot = require('./lib/generate-startup-snapshot')
 const installApplication = require('./lib/install-application')
 const packageApplication = require('./lib/package-application')
 const prebuildLessCache = require('./lib/prebuild-less-cache')
@@ -51,7 +49,6 @@
   process.exit(1)
 })
 
-checkChromedriverVersion()
 cleanOutputDirectory()
 copyAssets()
 transpilePackagesWithCustomTranspilerPaths()
@@ -64,47 +61,4 @@
 generateMetadata()
 generateAPIDocs()
 dumpSymbols()
-  .then(packageApplication)
-  .then(packagedAppPath => generateStartupSnapshot(packagedAppPath).then(() => packagedAppPath))
-  .then(packagedAppPath => {
-    if (process.platform === 'darwin') {
-      if (argv.codeSign) {
-        codeSignOnMac(packagedAppPath)
-      } else {
-        console.log('Skipping code-signing. Specify the --code-sign option to perform code-signing'.gray)
-      }
-    } else if (process.platform === 'win32') {
-      if (argv.createWindowsInstaller) {
-        return createWindowsInstaller(packagedAppPath, argv.codeSign).then(() => packagedAppPath)
-      }
-      else {
-        console.log('Skipping creating installer. Specify the --create-windows-installer option to create a Squirrel-based Windows installer. Code-signing was skipped too.'.gray)
-      }
-    } else if (process.platform === 'linux') {
-      if (argv.createDebianPackage) {
-        createDebianPackage(packagedAppPath)
-      } else {
-        console.log('Skipping creating debian package. Specify the --create-debian-package option to create it.'.gray)
-      }
-
-      if (argv.createRpmPackage) {
-        createRpmPackage(packagedAppPath)
-      } else {
-        console.log('Skipping creating rpm package. Specify the --create-rpm-package option to create it.'.gray)
-      }
-    }
-
-    return Promise.resolve(packagedAppPath)
-  }).then(packagedAppPath => {
-    if (argv.compressArtifacts) {
-      compressArtifacts(packagedAppPath)
-    } else {
-      console.log('Skipping artifacts compression. Specify the --compress-artifacts option to compress Atom binaries (and symbols on macOS)'.gray)
-    }
-
-    if (argv.install != null) {
-      installApplication(packagedAppPath, argv.install)
-    } else {
-      console.log('Skipping installation. Specify the --install option to install Atom'.gray)
-    }
-  })
+  
diff -Naur a/script/package.json b/script/package.json
--- a/script/package.json	2017-05-25 12:32:43.000000000 -0600
+++ b/script/package.json	2017-06-03 14:39:33.505500053 -0600
@@ -8,9 +8,6 @@
     "colors": "1.1.2",
     "csslint": "1.0.2",
     "donna": "1.0.13",
-    "electron-chromedriver": "~1.3",
-    "electron-link": "0.0.22",
-    "electron-mksnapshot": "~1.3",
     "electron-packager": "7.3.0",
     "electron-winstaller": "2.5.1",
     "fs-extra": "0.30.0",
diff -Naur a/src/main-process/atom-application.coffee b/src/main-process/atom-application.coffee
--- a/src/main-process/atom-application.coffee	2017-05-25 12:32:43.000000000 -0600
+++ b/src/main-process/atom-application.coffee	2017-06-03 14:39:55.687979978 -0600
@@ -821,7 +821,7 @@
       @restart()
 
   restart: ->
-    args = []
+    args = ["--app=/usr/share/atom"]
     args.push("--safe") if @safeMode
     args.push("--log-file=#{@logFile}") if @logFile?
     args.push("--socket-path=#{@socketPath}") if @socketPath?
diff -Naur a/src/package-manager.coffee b/src/package-manager.coffee
--- a/src/package-manager.coffee	2017-05-25 12:32:43.000000000 -0600
+++ b/src/package-manager.coffee	2017-06-03 14:39:33.505500053 -0600
@@ -150,7 +150,7 @@
     apmRoot = path.join(process.resourcesPath, 'app', 'apm')
     @apmPath = path.join(apmRoot, 'bin', commandName)
     unless fs.isFileSync(@apmPath)
-      @apmPath = path.join(apmRoot, 'node_modules', 'atom-package-manager', 'bin', commandName)
+      @apmPath = path.join('/usr/share/atom/resources/app/apm', 'node_modules', 'atom-package-manager', 'bin', commandName)
     @apmPath
 
   # Public: Get the paths being used to look for packages.
