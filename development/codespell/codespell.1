.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.48.5.
.TH CODESPELL "1" "January 2023" "codespell 2.1.0" "User Commands"
.SH NAME
codespell \- detect spelling mistakes in source code
.SH SYNOPSIS
\fBcodespell\fR [OPTIONS] [file1 file2 ... fileN]
.SH DESCRIPTION
.PP
codespell is designed to find and fix common misspellings in text files.
It is designed primarily for checking misspelled words in source code,
but it can be used with other files as well.
.PP
usage: codespell [\-h] [\-\-version] [\-d] [\-c] [\-w] [\-D DICTIONARY]
.IP
[\-\-builtin BUILTIN\-LIST] [\-\-ignore\-regex IGNORE_REGEX]
[\-I FILE] [\-L WORDS] [\-\-uri\-ignore\-words\-list WORDS]
[\-r REGEX] [\-\-uri\-regex URI_REGEX] [\-s] [\-\-count] [\-S SKIP]
[\-x FILE] [\-i INTERACTIVE] [\-q QUIET_LEVEL] [\-e] [\-f] [\-H]
[\-A LINES] [\-B LINES] [\-C LINES] [\-\-config CONFIG]
[files ...]
.SS "positional arguments:"
.TP
files
files or directories to check
.SS "optional arguments:"
.TP
\fB\-h\fR, \fB\-\-help\fR
show this help message and exit
.TP
\fB\-\-version\fR
show program's version number and exit
.TP
\fB\-d\fR, \fB\-\-disable\-colors\fR
disable colors, even when printing to terminal (always
set for Windows)
.TP
\fB\-c\fR, \fB\-\-enable\-colors\fR
enable colors, even when not printing to terminal
.TP
\fB\-w\fR, \fB\-\-write\-changes\fR
write changes in place if possible
.TP
\fB\-D\fR DICTIONARY, \fB\-\-dictionary\fR DICTIONARY
custom dictionary file that contains spelling
corrections. If this flag is not specified or equals
"\-" then the default dictionary is used. This option
can be specified multiple times.
.TP
\fB\-\-builtin\fR BUILTIN\-LIST
comma\-separated list of builtin dictionaries to
include (when "\-D \-" or no "\-D" is passed). Current
options are:
\- 'clear' for unambiguous errors
\- 'rare' for rare but valid words
\- 'informal' for making informal words more formal
\- 'usage' for replacing phrasing with recommended
.TP
terms
\- 'code' for words common to code and/or mathematics
.TP
that might be typos
\- 'names' for valid proper names that might be typos
\- 'en\-GB_to_en\-US' for corrections from en\-GB to en\-US
The default is 'clear,rare'.
.TP
\fB\-\-ignore\-regex\fR IGNORE_REGEX
regular expression which is used to find patterns to
ignore by treating as whitespace. When writing regular
expressions, consider ensuring there are boundary nonword chars, e.g., "\ebmatch\eb". Defaults to
empty/disabled.
.TP
\fB\-I\fR FILE, \fB\-\-ignore\-words\fR FILE
file that contains words which will be ignored by
codespell. File must contain 1 word per line. Words
are case sensitive based on how they are written in
the dictionary file
.TP
\fB\-L\fR WORDS, \fB\-\-ignore\-words\-list\fR WORDS
comma separated list of words to be ignored by
codespell. Words are case sensitive based on how they
are written in the dictionary file
.TP
\fB\-\-uri\-ignore\-words\-list\fR WORDS
comma separated list of words to be ignored by
codespell in URIs and emails only. Words are case
sensitive based on how they are written in the
dictionary file. If set to "*", all misspelling in
URIs and emails will be ignored.
.TP
\fB\-r\fR REGEX, \fB\-\-regex\fR REGEX
regular expression which is used to find words. By
default any alphanumeric character, the underscore,
the hyphen, and the apostrophe is used to build words.
This option cannot be specified together with \fB\-\-writechanges\fR.
.TP
\fB\-\-uri\-regex\fR URI_REGEX
regular expression which is used to find URIs and
emails. A default expression is provided.
.TP
\fB\-s\fR, \fB\-\-summary\fR
print summary of fixes
.TP
\fB\-\-count\fR
print the number of errors as the last line of stderr
.TP
\fB\-S\fR SKIP, \fB\-\-skip\fR SKIP
comma\-separated list of files to skip. It accepts
globs as well. E.g.: if you want codespell to skip
\&.eps and .txt files, you'd give "*.eps,*.txt" to this
option.
.TP
\fB\-x\fR FILE, \fB\-\-exclude\-file\fR FILE
FILE with lines that should not be checked for errors
or changed
.TP
\fB\-i\fR INTERACTIVE, \fB\-\-interactive\fR INTERACTIVE
set interactive mode when writing changes:
\- 0: no interactivity.
\- 1: ask for confirmation.
\- 2: ask user to choose one fix when more than one is
.TP
available.
\- 3: both 1 and 2
.TP
\fB\-q\fR QUIET_LEVEL, \fB\-\-quiet\-level\fR QUIET_LEVEL
bitmask that allows suppressing messages:
\- 0: print all messages.
\- 1: disable warnings about wrong encoding.
\- 2: disable warnings about binary files.
\- 4: omit warnings about automatic fixes that were
.TP
disabled in the dictionary.
\- 8: don't print anything for non\-automatic fixes.
\- 16: don't print the list of fixed files.
As usual with bitmasks, these levels can be combined;
e.g. use 3 for levels 1+2, 7 for 1+2+4, 23 for
1+2+4+16, etc. The default mask is 2.
.TP
\fB\-e\fR, \fB\-\-hard\-encoding\-detection\fR
use chardet to detect the encoding of each file. This
can slow down codespell, but is more reliable in
detecting encodings other than utf\-8, iso8859\-1, and
ascii.
.TP
\fB\-f\fR, \fB\-\-check\-filenames\fR
check file names as well
.TP
\fB\-H\fR, \fB\-\-check\-hidden\fR
check hidden files and directories (those starting
with ".") as well.
.TP
\fB\-A\fR LINES, \fB\-\-after\-context\fR LINES
print LINES of trailing context
.TP
\fB\-B\fR LINES, \fB\-\-before\-context\fR LINES
print LINES of leading context
.TP
\fB\-C\fR LINES, \fB\-\-context\fR LINES
print LINES of surrounding context
.TP
\fB\-\-config\fR CONFIG
path to config file.
.SH AUTHOR
Lucas De Marchi <lucas.de.marchi@gmail.com>
.SH "SEE ALSO"
https://github.com/codespell-project/codespell
