#!/bin/bash

# Slackware build script for OpenRA

# Copyright 2017,2022 Vasily Sora USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# 20241018 bkw: Modified by SlackBuilds.org, BUILD=2: build with lua51.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=OpenRA
VERSION=${VERSION:-20210321}
BUILD=${BUILD:-2}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}
HOME=$TMP/$PRGNAM-release-$VERSION-source
DOTNET_CLI_TELEMETRY_OPTOUT=1
export HOME DOTNET_CLI_TELEMETRY_OPTOUT


if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
rm -rf $TMP/$PRGNAM-release-$VERSION-source
mkdir -p $TMP $PKG $OUTPUT $TMP/$PRGNAM-release-$VERSION-source
cd $TMP/$PRGNAM-release-$VERSION-source
tar xvf $CWD/$PRGNAM-release-$VERSION-source.tar.bz2
patch -p1 < $CWD/lua51.diff
tar -xzvf $CWD/openra-deps.tar.gz
cp $CWD/IP2LOCATION-LITE-DB1.IPV6.BIN.ZIP .
rm fetch-geoip.sh
touch fetch-geoip.sh
echo "#!/bin/sh" >> fetch-geoip.sh
echo 'echo "success"' >> fetch-geoip.sh
chmod +x fetch-geoip.sh

sed -i 's/msbuild/dotnet\ msbuild/g' ./Makefile ./packaging/functions.sh

chown -R root:root .
find -L .  -perm /111 -a \! -perm 755 -a -exec chmod 755 {} + -o \
        \! -perm /111 -a \! -perm 644 -a -exec chmod 644 {} +

unshare -n make all TARGETPLATFORM=unix-generic  RUNTIME=mono MSBUILD='dotnet msbuild -verbosity:m -nologo'
make prefix=/usr mandir=/usr/man bindir=/usr/games libdir=/usr/lib${LIBDIRSUFFIX} install DESTDIR=$PKG
make prefix=/usr mandir=/usr/man bindir=/usr/games libdir=/usr/lib${LIBDIRSUFFIX} install-linux-shortcuts DESTDIR=$PKG
make prefix=/usr mandir=/usr/man bindir=/usr/games libdir=/usr/lib${LIBDIRSUFFIX} install-linux-appdata DESTDIR=$PKG

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

cd $PKG

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
