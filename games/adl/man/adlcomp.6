.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "A/ADL/MAN/ADLCOMP 6"
.TH A/ADL/MAN/ADLCOMP 6 "2015-02-16" "19930322" "SlackBuilds.org"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
adlcomp \- compile an ADL program
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
adlcomp file [ \-o outfile ] [ \-idir ] [ \-tdir ] [ \-d ] [\-w ]
[ \-en ] [ \-gn ] [ \-mn ] [ \-nn ] [ \-pn ] [ \-rn ] [ \-sn ] [
\&\-vn ]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Adlcomp reads an \s-1ADL\s0 program from file and produces an
output file which contains the tables and interpretive code
necessary to play the game described by the program (using
\&\fIadlrun\fR\|(6)). Error messages are produced on the standard
error output, and a data summary is produced on the standard
output. The following options are available:
.IP "\-o outfile" 12
.IX Item "-o outfile"
The result of the compilation is saved in
outfile. The result is saved in adlcomp.out in
the current directory if this option is not
specified.
.IP "\-idir" 12
.IX Item "-idir"
\&\s-1INCLUDE\s0 files are searched for first in the
current directory, then in directories specified
by \-i dir options. Up to 4 \-i options may be
present.
.IP "\-tdir" 12
.IX Item "-tdir"
Adlcomp writes two temporary files in the
process of compilation. This option tells
adlcomp which directory (or disk, on those
systems which allow it) to use for these
temporary files. The default is \*(L"/tmp\*(R" on UN*X
operating systems, \*(L"\s-1RAM:\*(R"\s0 on the Amiga, and the
current directory on MS-DOS.
.IP "\-d" 12
.IX Item "-d"
Puts adlcomp into debugging mode. All symbols
are written out to outfile, and additional code
is produced which keeps track of the file name
and line number. \-d implies \-w.
.IP "\-w" 12
.IX Item "-w"
Suppress the printing of warning messages.
.IP "\-en" 12
.IX Item "-en"
Sets the maximum number of errors to n. The
default is \-1 (no maximum). If the number of
errors encountered is greater than n, adlcomp
aborts.
.IP "\-gn" 12
.IX Item "-gn"
Sets the maximum number of globals to n. The
default value is 64.
.IP "\-mn" 12
.IX Item "-mn"
Sets the maximum number of messages (strings
enclosed in double quotes) to n. The default
value is 1024.
.IP "\-nn" 12
.IX Item "-nn"
Sets the maximum number of NOUNs to n. The
default value is 256.
.IP "\-pn" 12
.IX Item "-pn"
Sets the maximum number of preposition synonyms
to n. The default value is 8.
.IP "\-rn" 12
.IX Item "-rn"
Sets the maximum number of routines to n. The
default value is 512.
.IP "\-sn" 12
.IX Item "-sn"
Sets the maximum number of verb phrases to n.
The default value is 8.
.IP "\-vn" 12
.IX Item "-vn"
Sets the maximum number of verbs to n. The
default value is 128.
.SH "CONFORMANCE"
.IX Header "CONFORMANCE"
This version of adlcomp has a 255\-character limit on
compile-time strings. It implements Pascal-like \s-1LOCAL\s0
variables.
.SH "EXAMPLE"
.IX Header "EXAMPLE"
adlcomp aard.adl \-o aard \-w
.SH "FILES"
.IX Header "FILES"
adlsval.tmp
String paging file
.PP
adlcode.tmp
Instruction paging file
.PP
*.adl
\&\s-1ADL\s0 source files
.SH "WARNING"
.IX Header "WARNING"
On Amiga computers, the stack should be set to at least
10000 before running adlcomp.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIadlrun\fR\|(6)
\&\fIadldebug\fR\|(6)
Brengle and Cunniff: The \s-1ADL\s0 Programmer's Reference Manual
Adler, Kostanick, Stein and Urban: A Brief Introduction to
\&\s-1UCLA\s0 Dungeon Definition Language
