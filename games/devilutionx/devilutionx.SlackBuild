#!/bin/bash

# Slackware build script for devilutionx

# Copyright 2022 Steven Voges <svoges.sbo@gmail.com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=devilutionx
SRCNAM=devilutionX
VERSION=${VERSION:-1.4.0}
ASIO=${ASIO:-ebeff99f539da23d27c2e8d4bdbc1ee011968644}
LIBMPQ=${LIBMPQ:-0f10bd1600f406b13932bf5351ba713361262184}
LIBSMACKERDEC=${LIBSMACKERDEC:-2997ee0e41e91bb723003bc09234be553b190e38}
SIMPLEINI=${SIMPLEINI:-9b3ed7ec815997bc8c5b9edf140d6bde653e1458}
SDLAUDIOLIB=${SDLAUDIOLIB:-1a69135313c79817b38a3a99826d4ac28d627fdf}
LIBZT=${LIBZT:-a34ba7f1cc2e41b05badd25d1b01fdc5fd2f4e02}
ZEROTIERONE=${ZEROTIERONE:-7f026edea747525189da8d5a58b3a6ff59190246}
LWIP=${LWIP:-32708c0a8b140efb545cc35101ee5fdeca6d6489}
LWIPCONTRIB=${LWIPCONTRIB:-a57a8a213067912168baf978864a6f1adaacc042}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}
DEPS=$TMP/$SRCNAM-$VERSION/build/_deps

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $SRCNAM-$VERSION
tar xvf $CWD/$SRCNAM-$VERSION.tar.gz

mkdir -p $DEPS/asio-subbuild/asio-populate-prefix/src
mkdir -p $DEPS/libmpq-subbuild/libmpq-populate-prefix/src
mkdir -p $DEPS/libsmackerdec-subbuild/libsmackerdec-populate-prefix/src
mkdir -p $DEPS/simpleini-subbuild/simpleini-populate-prefix/src
mkdir -p $DEPS/sdl_audiolib-subbuild/sdl_audiolib-populate-prefix/src
mkdir -p $DEPS/libzt-src/ext/ZeroTierOne
mkdir -p $DEPS/libzt-src/ext/lwip
mkdir -p $DEPS/libzt-src/ext/lwip-contrib

tar xvf $CWD/asio-$ASIO.tar.gz -C \
  $DEPS/asio-subbuild/asio-populate-prefix/src --strip-components 1
tar xvf $CWD/libmpq-$LIBMPQ.tar.gz -C \
  $DEPS/libmpq-subbuild/libmpq-populate-prefix/src --strip-components 1
tar xvf $CWD/libsmackerdec-$LIBSMACKERDEC.tar.gz -C \
  $DEPS/libsmackerdec-subbuild/libsmackerdec-populate-prefix/src --strip-components 1
tar xvf $CWD/simpleini-$SIMPLEINI.tar.gz -C \
  $DEPS/simpleini-subbuild/simpleini-populate-prefix/src --strip-components 1
tar xvf $CWD/SDL_audiolib-$SDLAUDIOLIB.tar.gz -C \
  $DEPS/sdl_audiolib-subbuild/sdl_audiolib-populate-prefix/src --strip-components 1
tar xvf $CWD/libzt-$LIBZT.tar.gz -C \
  $DEPS/libzt-src --strip-components 1
tar xvf $CWD/ZeroTierOne-$ZEROTIERONE.tar.gz -C \
  $DEPS/libzt-src/ext/ZeroTierOne --strip-components 1
tar xvf $CWD/lwip-$LWIP.tar.gz -C \
  $DEPS/libzt-src/ext/lwip --strip-components 1
tar xvf $CWD/lwip-contrib-$LWIPCONTRIB.tar.gz -C \
  $DEPS/libzt-src/ext/lwip-contrib --strip-components 1

cd $SRCNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

cd build
  cmake \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DBUILD_TESTING=OFF \
    -DFETCHCONTENT_FULLY_DISCONNECTED=ON \
    -DFETCHCONTENT_QUIET=OFF \
    -DFETCHCONTENT_SOURCE_DIR_ASIO=$DEPS/asio-subbuild/asio-populate-prefix/src \
    -DFETCHCONTENT_SOURCE_DIR_LIBMPQ=$DEPS/libmpq-subbuild/libmpq-populate-prefix/src \
    -DFETCHCONTENT_SOURCE_DIR_LIBSMACKERDEC=$DEPS/libsmackerdec-subbuild/libsmackerdec-populate-prefix/src \
    -DFETCHCONTENT_SOURCE_DIR_LIBZT=$DEPS/libzt-src \
    -DFETCHCONTENT_SOURCE_DIR_SDL_AUDIOLIB=$DEPS/sdl_audiolib-subbuild/sdl_audiolib-populate-prefix/src \
    -DFETCHCONTENT_SOURCE_DIR_SIMPLEINI=$DEPS/simpleini-subbuild/simpleini-populate-prefix/src \
    -DVERSION_NUM=${VERSION} \
    -DCMAKE_BUILD_TYPE=Release ..
  make
  make install/strip DESTDIR=$PKG
cd ..

rm -f $PKG/usr/share/diasurgical/$PRGNAM/README.txt

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a \
  *.md LICENSE docs \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
