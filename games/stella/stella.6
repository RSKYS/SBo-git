.TH stella 6 "January 12, 2019" stella
.SH NAME
stella \- Atari 2600 emulator
.SH SYNOPSIS
.B stella
[\fIoptions\fP] <\fIROM file\fP>
.SH DESCRIPTION
.B stella
is a comprehensive emulator of the old Atari 2600 video-game
console. It support most Atari 2600 games and many peripherals.
.PP
.SH OPTIONS
.B stella
accepts the following options:
.TP
.BR \-video " <" opengl | opengles2 | opengles | software >
Use OpenGL, OpenGLES or SDL software rendering mode; the default is
the best available mode detected.
.TP
.BR \-vsync " <" 1 | 0 >
Synchronize screen updates to the vertical blank period. This can
result in smoother updates, and eliminate tearing.
.TP
.BR \-fullscreen " <" 1 | 0  >
Play the game in fullscreen mode (\fB1\fP) or in a window (\fB0\fP).
.TP
.BR \-center " <" 1 | 0 >
Centers game window (if possible).
.TP
.BR \-palette " <" standard | z26 | user >
Sets the palette to either normal Stella, the one used in the \fBz26\fP
emulator, or a user-defined palette.
.TP
.BR \-speed " <\fInumber\fP>"
Controls the emulation speed (as a percentage, between 10 and 1000,
from one-tenth the native speed to ten times the native speed).
.TP
.BR \-uimessages " <" 1 | 0 >
Enable or disable display of message in the UI.
Note that messages indicating serious errors override this setting,
and are always shown.
.TP
.BR \-sound " <" 1 | 0 >
Enable or disable sound generation.
.TP
.BR \-fragsize " <\fInumber\fP>"
Specify the sound fragment size to use. Under Debian the recommended
value is 512.
.TP
.BR \-freq " <\fInumber\fP>"
Set sound sample output frequency (0 - 48000). Default is 31400. Do
not change unless you experience sound issues.
.TP
.BR \-volume " <\fInumber\fP>"
Set the volume (0 - 100).
.TP
.BR \-tia.zoom " <\fInumber\fP>"
Use the specified zoom level (integer) while in TIA/emulation mode.
.TP
.BR \-tia.inter " <" 1 | 0 >
Use interpolation for the TIA image (results in blending/smoothing of
the image).
.TP
.BR \-tia.aspectn " <\fInumber\fP>, " \-tia.aspectp " <\fInumber\fP>"
Specify the amount (as a percentage) to scale the TIA image width in
NTSC and PAL mode. Since many video modes do not use square pixels,
you can reduce width until the pixels appear square. Allowable values
are 80\-120; the author finds 85\-90 gives the mos authentic look for
NTSC, and 105\-110 for PAL.
.TP
.BR \-tia.fsfill " <" 1 | 0 >
Stretch TIA image completely while in fullscreen mode (vs. an integral
stretch which won't necessarily completely fill the screen).
.TP
.BR \-tia.dbgcolors " <\fIroygbp\fP>"
Assigns the colours (r)ed, (o)range, (y)ellow, (g)reen, (b)lue and
(p)urple to each graphical register P0/M0/P1/M1/PF/BL, respectively.
Currently, these can be changed around to apply different colours to
the respective register.
.TP
.BR \-tv.filter " <" 0 \- 5 >
Blargg TV effects, 0 is disabled, next numbers in sequence represent
presets for "Composite", "S-Video", "RGB", "Bad Adjust" and "Custom"
modes.
.TP
.BR \-tv.phosphor " <" always | byrom >
Determines how phosphor mode is enabled. If
.BR always ,
then the ROM properties entry is ignored, and phosphor mode is always
turned on.
Otherwise, the ROM properties determine whether phosphor mode is used
for each ROM.
.TP
.BR \-tv.scanlines " <" 0 \- 100 >
TV effects scanline intensity, where 0 means completely off.
.TP
.BR \-tv.scaninter " <" 1 | 0 >
Blargg TV effects scanline interpolation, resulting in
blending/smoothing of the scanlines.
.TP
.BR \-tv.contrast " <\fInumber\fP>"
Blargg TV effects 'contrast' (only available in custom mode, range
\-1.0 to 1.0).
.TP
.BR \-tv.brightness " <\fInumber\fP>"
Blargg TV effects 'brightness' (only available in custom mode, range
\-1.0 to 1.0).
.TP
.BR \-tv.hue " <\fInumber\fP>"
Blargg TV effects 'hue' (only available in custom mode, range \-1.0 to
1.0).
.TP
.BR \-tv.saturation " <\fInumber\fP>"
Blargg TV effects 'saturation' (only available in custom mode, range
\-1.0 to 1.0).
.TP
.BR \-tv.gamma " <\fInumber\fP>"
Blargg TV effects 'gamma' (only available in custom mode, range \-1.0
to 1.0).
.TP
.BR \-tv.sharpness " <\fInumber\fP>"
Blargg TV effects 'sharpness' (only available in custom mode, range
\-1.0 to 1.0).
.TP
.BR \-tv.resolution " <\fInumber\fP>"
Blargg TV effects 'resolution' (only available in custom mode, range
\-1.0 to 1.0).
.TP
.BR \-tv.artifacts " <\fInumber\fP>"
Blargg TV effects 'artifacts' (only available in custom mode, range
\-1.0 to 1.0).
.TP
.BR \-tv.fringing " <\fInumber\fP>"
Blargg TV effects 'fringing' (only available in custom mode, range
\-1.0 to 1.0).
.TP
.BR \-tv.bleed " <\fInumber\fP>"
Blargg TV effects 'bleed' (only available in custom mode, range \-1.0
to 1.0).
.TP
.BR \-cheat " <\fIcode\fP>"
Use the specified cheatcode (see the \fICheat\fP section in the
provided documentation for a description of cheatcodes).
.TP
.BR \-loglevel " <" 0 | 1 | 2 >
Indicates level of logging to perform while the application is
running. Zero completely disables logging (except for serious errors),
while the remaining numbers show increasingly more detail.
.TP
.BR \-logtoconsole " <" 1 | 0 >
Indicates that logged output should be printed to the
console/commandline as it's being collected. An internal log will
still be kept, and the amount of logging is still controlled
by \fBloglevel\fP.
.TP
.BR \-joydeadzone " <\fInumber\fP>"
Sets the joystick deadzone area for analog joysticks. Accepts a number
from 0 - 29, and uses the formula 3200 + \fInumber\fP * 1000. So the
possible deadzone values range from 3200 to 32200.
.TP
.BR \-joyallow4 " <" 1 | 0 >
Allow all 4 directions on a joystick to be pressed
simultaneously. Bumper Bash ignores this setting, and always allows
all 4 directions.
.TP
.BR \-usemouse " <" always | analog | never >
Use mouse as a controller as specified by ROM properties in specific
case. \fBalways\fP and \fBnever\fP are self-explanatory, \fBanalog\fP
means only for analog-type devices (paddles, trackball, etc.).
.TP
.BR \-grabmouse " <" 1 | 0 >
Keeps the mouse in the game window in emulation mode.
.TP
.BR \-cursor " <" 0 | 1 | 2 | 3 >
Set mouse cursor state in UI/emulation modes.
.TP
.BR \-dsense " <\fInumber\fP>"
Sensitivity for emulation of paddles when using a digital device
(joystick digital axis or button, keyboard key, etc.). \fInumber\fP
may range from 1 to 20, with larger numbers causing faster movement.
.TP
.BR \-msense " <\fInumber\fP>"
Sensitivity for emulation of paddles when using a mouse. \fInumber\fP
may range from 1 to 20, with larger numbers causing faster movement.
.TP
.BR \-tsense " <\fInumber\fP>"
Sensitivity for emulation of trackball controllers when using a mouse.
\fInumber\fP may range from 1 to 20, with larger numbers causing
faster movement.
.TP
.BR \-saport " <" lr | rl >
Determines how to enumerate the Stelladaptor/2600-daptor devices in
the order they are found: 'lr' means first is left port, second is
right port, 'rl' means the opposite.
.TP
.BR \-ctrlcombo " <" 1 | 0 >
Use control-x key combos. This is normally enabled, since the Quit
command is tied to 'Control-q'. However, there are times when a
2-player game is using either the 'f' or 'r' keys for movement, and
pressing Control (for Fire) will perform an unwanted action associated
with Control-r or Control-f.
.TP
.BR \-autoslot " <" 1 | 0 >
Automatically switch to the next available save state slot after
saving a ROM state file.
.TP
.BR \-fastscbios " <" 1 | 0 >
Disable Supercharger BIOS progress loading bars.
.TP
.BR \-snapsavedir " <\fIpath\fP>"
The directory to save snapshot files to.
.TP
.BR \-snaploaddir " <\fIpath\fP>"
The directory to load snapshot files from.
.TP
.BR \-snapname " <" int | rom >
When saving snapshots, use either the internal database name or the
actual ROM filename.
.TP
.BR \-sssingle " <" 1 | 0 >
Generate single snapshot instead of many, overwriting any previous
snapshots.
.TP
.BR \-ss1x " <" 1 | 0 >
Ignore any scaling applied to the TIA image, and save snapshot in
unscaled (1x) mode.
.TP
.BR \-ssinterval " <\fInumber\fP>"
Set the interval in seconds between taking snapshots in continuous
snapshot mode (currently, 1 - 10).
.TP
.BR \-rominfo " <\fIrom\fP>"
Display detailed information about the given ROM, and then exit
Stella.
.TP
.BR \-listrominfo
Prints relevant contents of the Stella ROM database, one ROM per line,
and then exit Stella. This can be used for external frontends.
.TP
.BR \-exitlauncher " <" 1 | 0 >
Always exit to ROM launcher when exiting a ROM (normally, an exit to
launcher only happens when started with the launcher).
.TP
.BR \-launcherres " <\fIW\fP" x \fIH\fP>
Set the size of the ROM launcher.
.TP
.BR \-launcherfont " <" small | medium | large >
Set the size of the font in the ROM launcher.
.TP
.BR \-laucnherroms " <" 1 | 0 >
Specifies whether to show ROMs only (the default) or all files in the
ROM launcher.
.TP
.BR \-romviewer " <" 0 | 1 | 2 >
Hide ROM info viewer in ROM launcher mode (0), or use the given zoom
level (1 or 2).
.TP
.BR \-uipalette " <" standard | classic >
Use the specified palette for UI elements.
.TP
.BR \-listdelay " <\fIdelay\fP>"
Set the amount of time to wait between treating successive keypresses
as a single word in list widgets (value can range from 300-1000).
.TP
.BR \-mwheel " <\fIlines\fP>"
Set the number of lines a mousewheel will scroll in the UI.
.TP
.BR \-romdir " <\fIdir\fP>"
Set the directory where the ROM launcher will start.
.TP
.BR \-statedir " <\fIdir\fP>"
Set the directory in which to save state files.
.TP
.BR \-cheatfile " <\fIfile\fP>"
Set the full pathname of the cheatfile database.
.TP
.BR \-palettefile " <\fIfile\fP>"
Set the full pathname of the user-defined palette file.
.TP
.BR \-propsfile " <\fIfile\fP>"
Set the full pathname of the ROM properties file.
.TP
.BR \-nvramdir " <\fIdir\fP>"
Set the directory in which to save EEPROM files.
.TP
.BR \-cfgdir " <\fIdir\fP>"
Set the directory in which to access Distella config files.
.TP
.BR \-avoxport " <\fIname\fP>"
Set the name of the serial port where an AtariVox is connected.
.TP
.BR \-maxres " <\fIW\fP" x \fIH\fP>
Useful for developers, this sets the maximum size of window that can
be created, allowing to simulate testing on 'smaller' systems.
.TP
.BR \-help
Print a help message describing these options, and then exit Stella.

.P
The following are useful to developers. Only use them if you know what
you're doing! Note that in all cases, the values supplied to the
arguments are \fBnot\fP case sensitive.
.TP
.BR \-dis.resolve " <" 1 | 0 >
Try to differentiate between code vs. data sections in the
disassembler. See the \fIDebugger\fP section in the provided
documentation for more information.
.TP
.BR \-dis.gfxformat " <" 2 | 16 >
Sets the base to use for displaying GFX sections in the disassembler.
.TP
.BR \-dis.showaddr " <" 1 | 0 >
Shows/hides opcode addresses in the disassembler.
.TP
.BR \-dis.relocate " <" 1 | 0 >
Relocate calls out of address range in the disassembler.
.TP
.BR \-dbg.res " <\fIW\fP" x \fIH\fP>
Set the size of the debugger window.
.TP
.BR \-dbg.fontsize " <" small | medium | large >
Set the font size in the debugger window.
.TP
.BR \-dbg.fontstyle " <" 0 | 1 | 2 | 3 >
How to use bold fonts in the debugger window. \fB0\fP means all normal
font, \fB1\fP is bold labels only, \fB2\fP is bold non-labels only,
\fB3\fP is all bold font.
.TP
.BR \-dbg.ghostreadstrap " <" 1 | 0 >
Debugger considers/ignores 'ghost' reads for trap addresses.
.TP
.BR \-dbg.uhex " <" 0 | 1 >
Lower/uppercase hexadecimal display.
.TP
.BR \-break " <\fIaddress\fP>"
Set a breakpoint at a specified address.
.TP
.BR \-debug
Immediately jump to debugger mode when starting Stella.
.TP
.BR \-holdjoy0 " [" UDLRF ]
Start the emulator with the specified left joystick direction and
button held down (\fBUF\fP for up and fire).
After entering the emulation, you will have to press and release the
direction again to release the event.
.TP
.BR \-holdjoy1 " [" UDLRF ]
Start the emulator with the specified right joystick direction and
button held down (\fBUF\fP for up and fire).
After entering the emulation, you will have to press and release the
direction again to release the event.
.TP
.BR \-holdselect
Start the emulator with the Game Select switch held down.
After entering the emulation, you will have to press and
release 'Select' to release the event.
.TP
.BR \-holdreset
Start the emulator with the Game Reset switch held down.
After entering the emulation, you will have to press and
release 'Reset' to release the event.
.TP
.BR \-bs " <\fItype\fP>, " \-type " <\fItype\fP>"
Set "Cartridge.Type" property. See the \fIGame Properties\fP section
in the provided documentation for valid types.
.TP
.BR \-channels " <" Mono | Stereo >
Set "Cartridge.Sound" property.
.TP
.BR \-ld " <" A | B >
Set "Console.LeftDifficulty" property.
.TP
.BR \-rd " <" A | B >
Set "Console.RightDifficulty" property.
.TP
.BR \-tv " <" Color | BlackAndWhite >
Set "Console.TelevitionType" property.
.TP
.BR \-sp " <" Yes | No >
Set "Console.SwapPorts" property.
.TP
.BR \-lc " <\fItype\fP>"
Set "Controller.Left" property. See the \fIGame Properties\fP section
in the provided documentation for valid types.
.TP
.BR \-rc " <\fItype\fP>"
Set "Controller.Right" property. See the \fIGame Properties\fP section
in the provided documentation for valid types.
.TP
.BR \-bc " <\fItype\fP>"
Sets both "Controller.Left" and "Controller.Right" properties. See the
\fIGame Properties\fP section in the provided documentation for valid
types.
.TP
.BR \-cp " <" Yes | No >
Set "Controller.SwapPaddles" property. See the \fIGame Properties\fP
section in the provided documentation for valid types.
.TP
.BR \-ma " <" Auto | XY >
Set "Controller.MouseAxis" property. See the \fIGame Properties\fP
section in the provided documentation for valid types.
.TP
.BR \-format " <\fIformat\fP>"
Set "Display.Format" property. See the \fIGame Properties\fP section
in the provided documentation for valid formats.
.TP
.BR \-ystart " <\fInumber\fP>"
Set "Display.YStart" property (0 - 64).
.TP
.BR \-height " <\fInumber\fP>"
Set "Display.Height" property (210 - 256).
.TP
.BR \-pp " <" Yes | No >
Set "Display.Phosphor" property.
.TP
.BR \-ppblend " <\fInumber\fI>"
Set "Display.PPBlend" property, used for phosphor effect
(0-100). Default is 77.

.P
The following are available in two sets, one for players (prefixed by
.BR plr. )
and one for developers (prefixed by
.BR dev. ).
Only use them if you know what you're doing!
Note that in all cases, the values supplied to the arguments are
\fBnot\fP case sensitive.
.TP
.BR \-dev.settings " <" 1 | 0 >
Select developer
.RB ( 1 )
or player
.RB ( 0 )
set.
.TP
.BR \- < plr | dev > .stats " <" 1 | 0 >
Overlay console info on the TIA image during emulation.
.TP
.BR \- < plr | dev > .console " <" 2600 | 7800 >
Select console for B/W and Pause key handling and RAM initialization.
.TP
.BR \- < plr | dev > .bankrandom " <" 1 | 0 >
On reset, randomize the startup bank (only for selected bankswitch
types).
.TP
.BR \- < plr | dev > .ramrandom " <" 1 | 0 >
On reset, either randomize all RAM content, or zero it out instead.
.TP
.BR \- < plr | dev > .cpurandom " [" SAXYP ]
On reset, randomize the content of the specified CPU registers.
.TP
.BR \- < plr | dev > .tiadriven " <" 1 | 0 >
Set unused TIA pins to be randomly driven high or low on a read/peek.
.TP
.BR \- < plr | dev > .rwportbreak " <" 1 | 0 >
Since the 2600 has no dedicated R/W line, different addresses are used
for RAM read or write access.
If the code reads from such a write address, this causes an unwanted,
semi-random write to that address.
When this option is enabled, such reads interrupt emulation and the
debugger is entered.
.TP
.BR \- < plr | dev > .thumb.trapfatal " <" true | false >
The default of \fBtrue\fP allows the Thumb ARM emulation to throw an
exception and enter the debugger on fatal errors.
When disabled, such fatal errors are simply logged, and emulation
continues.
Do not use this unless you know exactly what you're doing, as it
changes the behaviour as compared to real hardware.
.TP
.BR \- < plr | dev > .eepromaccess " <" 1 | 0 >
When enabled, each read or write access to the AtariVox/SaveKey EEPROM
is signalled by a message.
.TP
.BR \- < plr | dev > .tv.jitter " <" 1 | 0 >
Enable TV jitter/roll effect, when there are too many or too few
scanlines per frame.
.TP
.BR \- < plr | dev > .tv.jitter_recovery " <" 1 - 20 >
When TV jitter/roll effect is enabled, determines how long to delay
recovery time (recovery spread over multiple frames).
.TP
.BR \- < plr | dev > .colorloss " <" 1 | 0 >
Enable/disable the PAL color-loss effect.
.TP
.BR \- < plr | dev > .debugcolors " <" 1 | 0 >
Enable/disable the fixed debug colors.
.TP
.BR \- < plr | dev > .timemachine " <" 1 | 0 >
Enables the Time Machine.
.TP
.BR \- < plr | dev > .tm.size " <" 20 - 1000 >
Defines the Time Machine buffer size.
.TP
.BR \- < plr | dev > .tm.uncompressed " <" 0 - 1000 >
Defines the uncompressed Time Machine buffer size.
Must be less than Time Machine the buffer size.
.TP
.BR \- < plr | dev > .tm.interval " <" 1f | 3f | 10f | 30f | 1s | 3s | 10s >
Defines the interval between two save states.
.TP
.BR \- < plr | dev > .tm.horizon " <" 3s | 10s | 30s | 1m | 3m | 10m | 30m | 60m >
Defines the horizon of the Time Machine.

.SH KEYBOARD CONTROLS
The Atari 2600 console controls and controllers are mapped to the
computer's keyboard as shown in the following sections. However, most of
these events can be remapped to other keys on your keyboard or buttons
on your joystick.

.SS Console controls (can be remapped)
.IP "Control + q"
Exit emulator
.IP Escape
Exit game mode/enter launcher mode
.IP Tab
Enter/exit options mode
.IP "Backslash (\e)"
Enter/exit command mode
.IP "Backquote (`)"
Enter/exit debugger
.IP F1
Select Game
.IP F2
Reset Game
.IP F3
Color TV
.IP F4
Black/White TV
.IP F5
Left Player Difficulty A
.IP F6
Left Player Difficulty B
.IP F7
Right Player Difficulty A
.IP F8
Right Player Difficulty B
.IP F9
Save state to current slot
.IP F10
Change current state slot
.IP F11
Load state from current slot
.IP F12
Save PNG snapshot
.IP Pause
Pause/resume emulation

.SS Joystick / BoosterGrip Controller (can be remapped)
.P
Left joystick:
.IP "Up arrow"
Joystick up
.IP "Down arrow"
Joystick down
.IP "Left arrow"
Joystick left
.IP "Right arrow"
Joystick right
.IP Space
Fire button
.IP 4
Trigger button
.IP 5
Booster button
.P
Right joystick:
.IP Y
Joystick up
.IP H
Joystick down
.IP G
Joystick left
.IP J
Joystick right
.IP F
Fire button
.IP 6
Trigger button
.IP 7
Booster button

.SS Paddle Controller digital emulation (can be remapped independently of joystick controller)
.P
By default the left paddles are mapped to the left joystick as follows:
.IP Left
Paddle 0 decrease
.IP Right
Paddle 0 increase
.IP Fire
Paddle 0 fire
.IP Up
Paddle 1 decrease
.IP Down
Paddle 1 increase
.IP Booster
Paddle 1 fire
.P
The same mappings on the right joystick correspond to the right
paddles (paddles 2 and 3 respectively).

.SS Driving Controller (cannot be remapped, always associated with joystick controllers)
Each driving controller is mapped to the corresponding joystick, using
the left, right and fire controls.

.SS Sega Genesis Controller (cannot be remapped, always associated with joystick and booster-grip controllers)
Each pad is mapped to the correspondig joystick as follows:
.IP Up
Up
.IP Down
Down
.IP Left
Left
.IP Right
Right
.IP Fire
Button 'B'
.IP Booster
Button 'C'

.SS Keypad Controller (can be remapped)
.P
Left keypad (press the key on the left to emulate the key on the
right):
.IP 1
1
.IP 2
2
.IP 3
3
.IP Q
4
.IP W
5
.IP E
6
.IP A
7
.IP S
8
.IP D
9
.IP Z
\&.
.IP X
0
.IP C
#

.P
Right keypad:
.IP 8
1
.IP 9
2
.IP "0 (the digit)"
3
.IP I
4
.IP "O (the letter)"
5
.IP P
6
.IP K
7
.IP L
8
.IP ;
9
.IP ,
\&.
.IP .
0
.IP /
#

.SS CompuMate Controller (cannot be remapped)
.P
.IP 0-9
0-9
.IP A-Z
A-Z
.IP Comma
Comma
.IP Period
Period
.IP Control
Func
.IP Shift
Shift
.IP "; or Return/Enter"
Enter
.IP "/ or Space"
Space
.IP Backspace
Func-Space

.SH FILES
.IP ~/.config/stella/stellarc
Default options (command line options override these). Lines starting
with ';' are considered comments and are ignored. Any other line must
be of the form <\fIcommand\fP> \fB=\fP <\fIvalue\fP>, where
\fIcommand\fP is the same as that specified on the command line,
without the '-' character, and \fIvalue\fP is the value given to the
setting.
.IP ~/.config/stella/atarivox_eeprom.dat
Default storage for the emulated EEPROM portion of an attached
AtariVox device.
.IP ~/.config/stella/savekey_eeprom.dat
Default storage for the emulated EEPROM portion of an attached SaveKey
device.
.IP ~/.config/stella/stella.cht
Default location of the cheat database file.

.SH SEE ALSO
\fB/usr/share/doc/stella/index.html\fP,
\fB/usr/share/doc/stella/debugger.html\fP.

.SH AUTHORS
\fBstella\fP was written by Bradford W. Mott, Stephen Anthony and the
Stella Team.

This manual page was adapted from the provided documentation by
Stephen Kitt <skitt@debian.org>, for the Debian GNU/Linux system (but
may be used by others). It was last modified for \fBstella\fP version
6.0.
