#!/bin/bash

# Slackware build script for mangohud

# Copyright 2022-2023 Steven Voges <Oregon, USA>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=mangohud
SRCNAM=MangoHud
VERSION=${VERSION:-0.6.9.1}
SRCVER=${SRCVER:-0.6.9-1}
IMGUI=${IMGUI:-1.81}
VULKANHEADERS=${VULKANHEADERS:-1.2.158}
XNVCTRL=${XNVCTRL:-disabled}
MANGOAPP=${MANGOAPP:-true}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

#Test for multilib
COMPAT32=${COMPAT32@L}
COMPATTMP="$( mktemp -d $TMP/compat32-test-XXXXXX )"
cd $COMPATTMP
echo "int main(void) {; return(0); }" > "$COMPATTMP/test.c"
gcc -m32 "$COMPATTMP/test.c" -o /dev/null >/dev/null 2>&1 && COMPAT32=${COMPAT32:-yes}
cd - >/dev/null 2>&1
rm -rf "$COMPATTMP"

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $SRCNAM-$SRCVER
tar xvf $CWD/$SRCNAM-$SRCVER.tar.?z
cd $SRCNAM-$SRCVER/subprojects
tar xvf $CWD/Vulkan-Headers-$VULKANHEADERS.tar.gz
unzip $CWD/vulkan-headers_$VULKANHEADERS-2_patch.zip
tar xvf $CWD/imgui-$IMGUI.tar.gz
unzip $CWD/imgui_$IMGUI-1_patch.zip
cd ..

#Slackware 15.0 ships meson 59.4, and mangohud requires 60.0, so we patch it.
sed -i "s/0.60.0/0.59.4/g" meson.build
#Fix install_tag warnings that may become errors in the future.
sed -i "/install_tag/d" data/meson.build
sed -i "/install_tag/d" src/meson.build

chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

mkdir build
cd build
  CFLAGS="$SLKCFLAGS" \
  CXXFLAGS="$SLKCFLAGS" \
  LDFLAGS="-L/usr/lib${LIBDIRSUFFIX}" \
  meson .. \
    --buildtype=release \
    --infodir=/usr/info \
    --libdir=/usr/lib${LIBDIRSUFFIX} \
    --localstatedir=/var \
    --mandir=/usr/man \
    --prefix=/usr \
    --sysconfdir=/etc \
     -Duse_system_spdlog=enabled \
     -Dwith_xnvctrl=$XNVCTRL \
     -Dmangoapp=$MANGOAPP
  ninja
  DESTDIR=$PKG ninja install
cd ..

if [ "$COMPAT32" = "yes" ]; then
  mkdir build32
  cd build32
    CC="gcc -m32" \
    CXX="g++ -m32" \
    CFLAGS="$SLKCFLAGS" \
    CXXFLAGS="$SLKCFLAGS" \
    LDFLAGS="-L/usr/lib" \
    PKG_CONFIG_PATH="/usr/lib/pkgconfig" \
    meson .. \
      --buildtype=release \
      --infodir=/usr/info \
      --libdir=/usr/lib \
      --localstatedir=/var \
      --mandir=/usr/man \
      --prefix=/usr \
      --sysconfdir=/etc \
       -Duse_system_spdlog=enabled \
       -Dwith_xnvctrl=$XNVCTRL \
       -Dmangoapp=false
    ninja
    DESTDIR=$PKG ninja install
  cd ..
fi

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a LICENSE README.md $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mv $PKG/usr/share/doc/$PRGNAM/$SRCNAM.conf.example \
  $PKG/usr/doc/$PRGNAM-$VERSION/
rm -rf $PKG/usr/share/doc

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
