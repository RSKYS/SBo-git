.\" Text automatically generated by txt2man
.TH AUBIOPITCH 1 "22 July 2023" "aubio 0.4.9" "aubio User's manual"
.SH NAME
\fBaubiopitch \fP- a command line tool to extract musical pitch
\fB
.SH SYNOPSIS
.nf
.fam C

\fBaubiopitch\fP \fIsource\fP
\fBaubiopitch\fP [[\fB-i\fP] \fIsource\fP] [\fB-o\fP \fIsink\fP]
           [\fB-r\fP \fIrate\fP] [\fB-B\fP \fIwin\fP] [\fB-H\fP \fIhop\fP]
           [\fB-p\fP \fImethod\fP] [\fB-u\fP \fIunit\fP] [\fB-l\fP \fIthres\fP]
           [\fB-T\fP \fItime-format\fP]
           [\fB-s\fP \fIsil\fP] [\fB-f\fP]
           [\fB-v\fP] [\fB-h\fP] [\fB-j\fP]

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION

\fBaubiopitch\fP attempts to detect the pitch, the perceived height of a musical
note.
.PP
When started with an input \fIsource\fP (\fB-i\fP/\fB--input\fP), the detected pitch are
printed on the console, prefixed by a timestamp in seconds. If no pitch
candidate is found, the output is 0.
.PP
When started without an input \fIsource\fP, or with the jack option (\fB-j\fP/\fB--jack\fP),
\fBaubiopitch\fP starts in jack mode.
.SH OPTIONS

This program follows the usual GNU command line syntax, with long options
starting with two dashes (--). A summary of options is included below.
.TP
.B
\fB-i\fP, \fB--input\fP \fIsource\fP
Run analysis on this audio file. Most uncompressed and
compressed are supported, depending on how aubio was built.
.TP
.B
\fB-o\fP, \fB--output\fP \fIsink\fP
Save results in this file. The file will be created on
the model of the input file. The detected frequency is played at the
detected loudness.
.TP
.B
\fB-r\fP, \fB--samplerate\fP \fIrate\fP
Fetch the input \fIsource\fP, resampled at the given
sampling \fIrate\fP. The \fIrate\fP should be specified in Hertz as an integer. If 0,
the sampling \fIrate\fP of the original \fIsource\fP will be used. Defaults to 0.
.TP
.B
\fB-B\fP, \fB--bufsize\fP \fIwin\fP
The size of the buffer to analyze, that is the length
of the window used for spectral and temporal computations. Defaults to 2048.
.TP
.B
\fB-H\fP, \fB--hopsize\fP \fIhop\fP
The number of samples between two consecutive analysis.
Defaults to 256.
.TP
.B
\fB-p\fP, \fB--pitch\fP \fImethod\fP
The pitch detection \fImethod\fP to use. See PITCH METHODS
below. Defaults to 'default'.
.TP
.B
\fB-u\fP, \fB--pitch\fP-\fIunit\fP \fIunit\fP
The \fIunit\fP to be used to print frequencies. Possible
values include midi, bin, cent, and Hz. Defaults to 'Hz'.
.TP
.B
\fB-l\fP, \fB--pitch-tolerance\fP \fIthres\fP
Set the tolerance for the pitch detection
algorithm. Typical values range between 0.2 and 0.9. Pitch candidates found
with a confidence less than this threshold will not be selected. The higher
the threshold, the more confidence in the candidates. Defaults to unset.
.TP
.B
\fB-s\fP, \fB--silence\fP \fIsil\fP
Set the silence threshold, in dB, under which the onset
will not be detected. A value of \fB-20.0\fP would eliminate most onsets but the
loudest ones. A value of \fB-90.0\fP would select all onsets. Defaults to \fB-90.0\fP.
.TP
.B
\fB-T\fP, \fB--timeformat\fP format
Set time format (samples, ms, seconds). Defaults to
seconds.
.TP
.B
\fB-m\fP, \fB--mix-input\fP
Mix \fIsource\fP signal to the output signal before writing to
\fIsink\fP.
.TP
.B
\fB-f\fP, \fB--force-overwrite\fP
Overwrite output file if it already exists.
.TP
.B
\fB-j\fP, \fB--jack\fP
Use Jack input/output. You will need a Jack connection
controller to feed aubio some signal and listen to its output.
.TP
.B
\fB-h\fP, \fB--help\fP
Print a short help message and exit.
.TP
.B
\fB-v\fP, \fB--verbose\fP
Be verbose.
.SH PITCH METHODS

Available methods are:
.TP
.B
default
use the default \fImethod\fP
.PP
Currently, the default \fImethod\fP is set to yinfft.
.TP
.B
schmitt
Schmitt trigger
.PP
This pitch extraction \fImethod\fP implements a Schmitt trigger to estimate the
period of a signal. It is computationally very inexpensive, but also very
sensitive to noise.
.TP
.B
fcomb
a fast harmonic comb filter
.PP
This pitch extraction \fImethod\fP implements a fast harmonic comb filter to
determine the fundamental frequency of a harmonic sound.
.TP
.B
mcomb
multiple-comb filter
.PP
This fundamental frequency estimation algorithm implements spectral
flattening, multi-comb filtering and peak histogramming.
.TP
.B
specacf
Spectral auto-correlation function
.TP
.B
yin
YIN algorithm
.PP
This algorithm was developed by A. de Cheveigne and H. Kawahara and
was first published in:
.PP
De Cheveign√©, A., Kawahara, H. (2002) "YIN, a fundamental frequency
estimator for speech and music", J. Acoust. Soc. Am. 111, 1917-1930.
.TP
.B
yinfft
Yinfft algorithm
.PP
This algorithm was derived from the YIN algorithm. In this implementation, a
Fourier transform is used to compute a tapered square difference function,
which allows spectral weighting. Because the difference function is tapered,
the selection of the period is simplified.
.PP
Paul Brossier, Automatic annotation of musical audio for interactive systems,
Chapter 3, Pitch Analysis, PhD thesis, Centre for Digital music, Queen Mary
University of London, London, UK, 2006.
.TP
.B
yinfast
YIN algorithm (accelerated)
.PP
An optimised implementation of the YIN algorithm, yielding results identical
to the original YIN algorithm, while reducing its computational cost from
\fBO\fP(n^2) to \fBO\fP(n \fBlog\fP(n)).
.SH SEE ALSO

\fBaubioonset\fP(1),
\fBaubiotrack\fP(1),
\fBaubionotes\fP(1),
\fBaubioquiet\fP(1),
\fBaubiomfcc\fP(1),
and
\fBaubiocut\fP(1).
.SH AUTHOR

This manual page was written by Paul Brossier <piem@aubio.org>. Permission is
granted to copy, distribute and/or modify this document under the terms of
the GNU General Public License as published by the Free Software Foundation,
either version 3 of the License, or (at your option) any later version.
