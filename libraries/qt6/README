Qt is a cross-platform application development framework for desktop,
embedded and mobile. Supported Platforms include Linux, OS X,
Windows, VxWorks, QNX, Android, iOS, BlackBerry, Sailfish OS and
others. 

Qt is not a programming language on its own. It is a framework written
in C++. A preprocessor, the MOC (Meta-Object Compiler), is used to
extend the C++ language with features like signals and slots. Before
the compilation step, the MOC parses the source files written in
Qt-extended C++ and generates standard compliant C++ sources from
them. Thus the framework itself and applications/libraries using it
can be compiled by any standard compliant C++ compiler like Clang,
GCC, ICC, MinGW and MSVC.

Qt6 has a compiler cache option when building. By default, this
behavior is disabled. To enable it, pass CCACHE=ON to the build script.
Unless you are building qt6 multiple times, you should leave this
option OFF.

Examples are disabled by default. To build them, pass EXAMPLES=ON
to the build script.

When building Qt's webengine, proprietary codecs are disabled by
default. To enable them, pass PROPRIETARY_CODECS=ON to the build
script. This will make the resulting package non-redistributable.

Qt6 requires 16GB of RAM to build, and a minimum of 40GB of available
disk storage. Disk storage requirements may increase when built
against optional dependencies.

Qt6 will autodetect and build against multiple external programs and
libraries. To see a list of optional dependencies, please consult
README.SLACKWARE
