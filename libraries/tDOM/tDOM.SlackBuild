#!/bin/bash

# Slackware build script for tDOM

# Copyright 2013-2023 by Richard Ellis (USA)
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# 20220301 bkw: Modified by SlackBuilds.org: fix tarball handling.
# No changes to package, so BUILD stays at 4.

# 20220612 Mods by Ruben Schuller for building ver 0.9.2

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=tDOM
VERSION=${VERSION:-0.9.2}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}
TARNAM=$(echo $PRGNAM | tr A-Z a-z)

# set these to false to omit building each as part of tDOM build
BUILD_TNC=${BUILD_TNC:-true}           ; # build tnc XML validator module
BUILD_TDOMHTML=${BUILD_TDOMHTML:-true} ; # build tdomhtml html generation module

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
  CONFIGURE=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
  CONFIGURE="--enable-64bit"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
  CONFIGURE=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $TARNAM-$VERSION-src
tar xvf $CWD/$TARNAM-$VERSION-src.tgz
cd $TARNAM-$VERSION-src
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \+ -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \+

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
    --prefix=/usr \
    --libdir=/usr/lib${LIBDIRSUFFIX} \
    --sysconfdir=/etc \
    --localstatedir=/var \
    --mandir=/usr/man \
    --build=$ARCH-slackware-linux \
    --enable-html5 \
    $CONFIGURE

make
make install DESTDIR=$PKG

if [ "$BUILD_TNC" == "true" ]; then
	pushd extensions/tnc
	CFLAGS="$SLKCFLAGS" \
	CXXFLAGS="$SLKCFLAGS" \
	./configure \
	    --prefix=/usr \
	    --libdir=/usr/lib${LIBDIRSUFFIX} \
	    --sysconfdir=/etc \
	    --localstatedir=/var \
	    --mandir=/usr/man \
	    --build=$ARCH-slackware-linux \
	    --with-tdom=$PKG/usr/lib${LIBDIRSUFFIX} \
	    $CONFIGURE

	# we need to set the LDFLAGS here, the values from tdomConfig.sh aren't
	# right until tdom is installed.
	make LDFLAGS="-L$PKG/usr/lib${LIBDIRSUFFIX}/tdom${VERSION} -ltdomstub${VERSION}"
	make install DESTDIR=$PKG
	popd
fi

if [ "$BUILD_TDOMHTML" == "true" ]; then
	pushd extensions/tdomhtml
	CFLAGS="$SLKCFLAGS" \
	CXXFLAGS="$SLKCFLAGS" \
	./configure \
	    --prefix=/usr \
	    --libdir=/usr/lib${LIBDIRSUFFIX} \
	    --sysconfdir=/etc \
	    --localstatedir=/var \
	    --mandir=/usr/man \
	    --build=$ARCH-slackware-linux

	make install DESTDIR=$PKG
	popd
fi

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

# this is empty
rm -f $PKG/usr/man/mann/tdomhtml.n.gz

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
ls
cp -a \
  LICENSE MPL_2.0.html README.md \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

rm -f $PKG/usr/lib*/*.la

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
