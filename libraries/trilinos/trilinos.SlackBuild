#!/bin/bash

# Slackware build script for trilinos

# Copyright 2015-2022 William PC - Seattle (USA)
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=trilinos
VERSION=${VERSION:-13.2.0}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi



TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf Trilinos-$PRGNAM-release-13-2-0
tar xvf $CWD/Trilinos-$PRGNAM-release-13-2-0.tar.gz
cd Trilinos-$PRGNAM-release-13-2-0
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# Use CUDA SDK and CUSPARSE.
if [ "${CUDA:-no}" == "yes" ]; then
  OPT_DEPS="$OPT_DEPS -DTPL_ENABLE_CUDA -DTPL_ENABLE_CUSPARSE"
fi

if [ "${EXAMPLES:-yes}" == "no" ]; then
  OPT_DEPS="$OPT_DEPS -DTrilinos_ENABLE_EXAMPLES=OFF"
fi

	CFGCOMMON="
	-DCMAKE_MAKE_PROGRAM=make \
	-DTPL_ENABLE_BLAS=ON \
	-DTPL_ENABLE_LAPACK=ON \
	-DTrilinos_ENABLE_NOX=ON \
	 -DNOX_ENABLE_LOCA=ON \
	-DTrilinos_ENABLE_EpetraExt=ON \
	 -DEpetraExt_BUILD_BTF=ON \
	 -DEpetraExt_BUILD_EXPERIMENTAL=ON \
	 -DEpetraExt_BUILD_GRAPH_REORDERINGS=ON \
	-DTrilinos_ENABLE_AztecOO=ON \
	-DTrilinos_ENABLE_Belos=ON \
	-DTrilinos_ENABLE_TrilinosCouplings=ON \
	-DTrilinos_ENABLE_Ifpack=ON \
	-DTrilinos_ENABLE_Isorropia=ON \
	-DTrilinos_ENABLE_Teuchos=ON \
	-DTeuchos_ENABLE_COMPLEX=ON \
	-DTrilinos_ENABLE_Amesos=ON \
	 -DAmesos_ENABLE_KLU=ON \
	 -DAmesos_ENABLE_UMFPACK=ON \
	-DTrilinos_ENABLE_Sacado=ON \
	-DTrilinos_ENABLE_ALL_OPTIONAL_PACKAGES=OFF \
	-DTPL_ENABLE_AMD=ON \
	-DAMD_LIBRARY_DIRS=/usr/lib${LIBDIRSUFFIX} \
	-DTPL_AMD_INCLUDE_DIRS=/usr/include/suitesparse \
	-DTPL_ENABLE_UMFPACK=ON \
	-DUMFPACK_LIBRARY_DIRS=/usr/lib${LIBDIRSUFFIX} \
	-DTPL_UMFPACK_INCLUDE_DIRS=/usr/include/suitesparse \
	"

	## Workaround Kokkos error in 32-bit
	# these packages gives optional features to Xyce
	if [ "$ARCH" = "x86_64" ]; then
	CFGCOMMON="$CFGCOMMON \
	-DTrilinos_ENABLE_Amesos2=ON \
	 -DAmesos2_ENABLE_KLU2=ON \
	 -DAmesos2_ENABLE_Basker=ON \
	-DTrilinos_ENABLE_Stokhos=ON \
	-DTrilinos_ENABLE_Kokkos=ON"
	else
	CFGCOMMON="$CFGCOMMON \
	-DTrilinos_ENABLE_Kokkos=OFF"
	fi

	CFGSERIAL="$CFGCOMMON 
	-DCMAKE_C_COMPILER=/usr/bin/gcc \
	-DCMAKE_CXX_COMPILER=/usr/bin/g++ \
	-DCMAKE_Fortran_COMPILER=/usr/bin/gfortran"

	CFGPARALLEL="$CFGCOMMON
	-DCMAKE_C_COMPILER=/usr/bin/mpicc \
	-DCMAKE_CXX_COMPILER=/usr/bin/mpic++ \
	-DCMAKE_Fortran_COMPILER=/usr/bin/mpif77 \
	-DTPL_ENABLE_ParMETIS=ON \
	-DParMETIS_LIBRARY_DIRS=/usr/lib${LIBDIRSUFFIX} \
	-DTPL_ParMETIS_INCLUDE_DIRS=/usr/include/parmetis \
	-DTPL_ENABLE_MPI=ON \
	-DTrilinos_ENABLE_Zoltan=ON"

	# ShyLU is required for use in Parallel Xyce 
	# however it depends on kokkos that doesn't compile
	# on 32-bit. Yeah, another workaround.
	if [ "$ARCH" = "x86_64" ]; then
	CFGPARALLEL="$CFGPARALLEL \
	-DTrilinos_ENABLE_ShyLU=ON"
	else
	CFGPARALLEL="$CFGPARALLEL \
	-DTrilinos_ENABLE_ShyLU=OFF"
	fi

  CFGTRILINOS=$CFGSERIAL
  BUILDDIR=build-serial

if [ "${PARALLEL:-no}" == "yes" ]; then
  CFGTRILINOS=$CFGPARALLEL
  BUILDDIR=build-parallel
  #SLKCFLAGS="CC=mpicc CXX=mpic++ F77=mpif77 $SLKCFLAGS"
fi

  rm -fr $BUILDDIR
  mkdir -p $BUILDDIR
  cd $BUILDDIR

  cmake \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_Fortran_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DTrilinos_INSTALL_LIB_DIR=/usr/lib${LIBDIRSUFFIX} \
    -DTrilinos_INSTALL_INCLUDE_DIR=/usr/include \
    $CFGTRILINOS \
    $OPT_DEPS \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_TYPE=RELEASE ..

  # check if this still necessary
  for f in $(grep -r -l /usr//usr/lib .); do
    sed -i -e 's:/usr//usr/lib:/usr/lib:g' $f
  done

  make
  ctest
  make install DESTDIR=$PKG
cd ..

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG -name perllocal.pod -o -name ".packlist" -o -name "*.bs" | xargs rm -f || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a {Copyright.txt,LICENSE,README,RELEASE_NOTES} $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
