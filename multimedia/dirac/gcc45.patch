From c99cf8d2cb1e9e69b464f4df2dcae9f9baab49dc Mon Sep 17 00:00:00 2001
From: Anuradha Suraparaju <asuraparaju@gmail.com>
Date: Sun, 9 May 2010 14:04:43 +1000
Subject: [PATCH] Fixed #2984304.  Fix compilation errors reported by gcc 4.5.0.

---
 libdirac_encoder/quant_chooser.cpp |    6 +++---
 1 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/libdirac_encoder/quant_chooser.cpp b/libdirac_encoder/quant_chooser.cpp
index 16ffcb3..7baa129 100644
--- a/libdirac_encoder/quant_chooser.cpp
+++ b/libdirac_encoder/quant_chooser.cpp
@@ -333,14 +333,14 @@ void QuantChooser::SelectBestQuant()
 void QuantChooser::SetSkip( CodeBlock& cblock , const int qidx)
 {
     const int u_threshold = dirac_quantiser_lists.QuantFactor4( qidx );
-    
+
     // Sets the skip flag for a codeblock
     bool can_skip = true;
     for (int j=cblock.Ystart(); j<cblock.Yend(); ++j )
     {
         for (int i=cblock.Xstart(); i<cblock.Xend(); ++i )
         {
-            if ( (std::abs(m_coeff_data[j][i])<<2) >= u_threshold )
+            if ( (static_cast<int>(std::abs(m_coeff_data[j][i]))<<2) >= u_threshold )
                 can_skip = false;
         }   
     }
@@ -355,7 +355,7 @@ CoeffType QuantChooser::BlockAbsMax( const Subband& node )
     {
         for (int i=node.Xp() ; i<node.Xp()+node.Xl(); ++i)
         {    
-            val = std::max( val , std::abs(m_coeff_data[j][i]) );
+            val = std::max( val , static_cast<int>(std::abs(m_coeff_data[j][i])) );
         }// i
     }// j
 
-- 
1.7.0.4

