The Enhanced TightVNC Viewer, SSVNC, adds encryption security to VNC
connections.

The package provides a GUI for Windows, Mac OS X, and Unix that
automatically starts up an STUNNEL SSL tunnel for SSL or ssh/plink for
SSH connections to any VNC server, such as x11vnc, and then launches the
VNC Viewer to use the encrypted tunnel.

The x11vnc server has built-in SSL support, however SSVNC can make SSL
encrypted VNC connections to any VNC Server if they are running an SSL
tunnel, such as STUNNEL or socat, at their end. SSVNC's SSH tunnel will
work to any VNC Server host running sshd that you can log into.

The SSVNC Unix vncviewer can also be run without the SSVNC encryption
GUI as an enhanced replacement for the xvncviewer, xtightvncviewer,
etc., viewers.

In addition to normal SSL, SSVNC also supports the VeNCrypt SSL/TLS and
Vino/ANONTLS encryption extensions to VNC on Unix, Mac OS X, and
Windows. Via the provided SSVNC VeNCrypt bridge, VeNCrypt and ANONTLS
encryption also works with any third party VNC Viewer (e.g. RealVNC,
TightVNC, UltraVNC, etc...) you select via 'Change VNC Viewer'.

There is a simplified SSH-Only mode (sshvnc). And an even more
simplified Terminal-Services mode (tsvnc) for use with x11vnc on the
remote side.

Note:
If you don't require or don't wish to build the Java based viewer you
can ignore the JDK dependency and set the JSRC environment variable to
the empty string.  Here is how I build it:

$ env JSRC="" sh ./ssvnc.SlackBuild
