#!/bin/sh

# Script to start/stop/restart the hddtemp daemon.
# Copyright 2017, 2020 Dominik Drobek <dominik.drobek (at) o2.pl>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


# Configuration options for hddtemp:

# HDDTEMP_DRIVES must contain a list of drives to monitor.
# The daemon will not start without it.
HDDTEMP_DRIVES=""

# Listen host and port:
HDDTEMP_LISTENHOST="--listen=localhost"
HDDTEMP_PORT="--port=7634"

# Additional options (man 8 hddtemp):
#HDDTEMP_OPTIONS=""

hddtemp_getpid() {
    HDDTEMP_PID="$(pidof hddtemp 2> /dev/null)"
}

hddtemp_start() {
    hddtemp_getpid
    if [ -n "${HDDTEMP_PID}" ]; then
        echo "hddtemp daemon is already running!"
        exit
    fi

    if [ -x /usr/sbin/hddtemp ]; then
        echo -n "Starting hddtemp daemon:  "
        /usr/sbin/hddtemp --daemon \
            ${HDDTEMP_LISTENHOST} \
            ${HDDTEMP_PORT} \
            ${HDDTEMP_OPTIONS} \
            ${HDDTEMP_DRIVES} &> /dev/null
    fi

    hddtemp_getpid
    if [ -n "${HDDTEMP_PID}" ]; then
        echo "success"
    else
        echo "failed!"
    fi
}

hddtemp_stop() {
    hddtemp_getpid
    if [ -z "${HDDTEMP_PID}" ]; then
        echo "hddtemp daemon is not running!"
        exit
    else
        echo -n "Stopping hddtemp daemon:  "
        kill "${HDDTEMP_PID}" &> /dev/null
        sleep 1
    fi

    hddtemp_getpid
    if [ -z "${HDDTEMP_PID}" ]; then
        echo "success"
    else
        echo "failed!"
    fi
}

hddtemp_restart() {
    hddtemp_stop
    hddtemp_start
}

case "$1" in
    "start")
        hddtemp_start
        ;;
    "stop")
        hddtemp_stop
        ;;
    "restart")
        hddtemp_restart
        ;;
    *)
        echo "usage: $0 start|stop|restart"
esac
