diff -Naur ti99sim-0.16.0/Makefile.linux ti99sim-0.16.0.patched/Makefile.linux
--- ti99sim-0.16.0/Makefile.linux	2020-05-25 16:52:22.000000000 -0400
+++ ti99sim-0.16.0.patched/Makefile.linux	2023-04-29 04:55:35.807225123 -0400
@@ -42,15 +42,15 @@
 	src/util
 
 install: ti99sim
-	@$(INSTALL) -d $(DATA_DIR)
-	@$(INSTALL) -d $(DATA_DIR)/cartridges
-	@$(INSTALL) -d $(DATA_DIR)/console
-	@$(INSTALL) -d $(DATA_DIR)/disks
-	@$(INSTALL) -d $(BIN_DIR)
-	@for target in $(ITARGETS); do \
+	$(INSTALL) -d $(DATA_DIR)
+	$(INSTALL) -d $(DATA_DIR)/cartridges
+	$(INSTALL) -d $(DATA_DIR)/console
+	$(INSTALL) -d $(DATA_DIR)/disks
+	$(INSTALL) -d $(BIN_DIR)
+	for target in $(ITARGETS); do \
 	   $(INSTALL) -s $$target $(BIN_DIR); \
 	 done
-	@if [ $(BIN_DIR) != $(SYS_BIN) ]; then \
+	if [ $(BIN_DIR) != $(SYS_BIN) ]; then \
 	   for target in $(notdir $(ITARGETS)); do \
 	     ln -f -s $(BIN_DIR)/$$target $(SYS_BIN)/$$target; \
 	   done \
@@ -67,7 +67,7 @@
 	@if [ -x src ]; then \
 	   rm -f {.,include,doc}/*~; \
 	   for dir in $(SRC_DIRS); do \
-	     $(MAKE) -sC $$dir clean; \
+	     $(MAKE) -C $$dir clean; \
 	   done \
 	 fi
 	@if [ -x bin ]; then \
@@ -90,13 +90,13 @@
 	    fi \
 	  fi; \
 	  for dir in $(SRC_DIRS); do \
-	    $(MAKE) -sC $$dir $(TI_DATA_DIR); \
+	    $(MAKE) -C $$dir $(TI_DATA_DIR); \
 	  done \
 	fi
 
 test: ti99sim
 	@if [ -x test ]; then \
-	  $(MAKE) -sC test; \
+	  $(MAKE) -C test; \
 	  for test in test/bin/test-*; do \
 	    $$test; \
 	  done \
diff -Naur ti99sim-0.16.0/rules.mak ti99sim-0.16.0.patched/rules.mak
--- ti99sim-0.16.0/rules.mak	2020-05-25 16:52:22.000000000 -0400
+++ ti99sim-0.16.0.patched/rules.mak	2023-04-29 04:56:01.280222726 -0400
@@ -102,20 +102,18 @@
 DF        = $(CFG)/$(*F)
 
 $(CFG)/%.o : %.cpp
-	@echo $<
-	@$(CXX) -c $(CFLAGS) $(WARNINGS) $(INCLUDES) -MD -o $@ $<
+	$(CXX) -c $(CFLAGS) $(WARNINGS) $(INCLUDES) -MD -o $@ $<
 	@cp $(DF).d $(DF).dep; \
 		sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
 			-e '/^$$/ d' -e 's/$$/ :/' < $(DF).d >> $(DF).dep; \
 		rm -f $(DF).d
 
 $(CFG)/%.o : %.m
-	@echo $<
-	@$(CC) -c $(CFLAGS) $(WARNINGS) $(INCLUDES) -o $@ $<
+	$(CC) -c $(CFLAGS) $(WARNINGS) $(INCLUDES) -o $@ $<
 
 %.h.gch: %.h
 	@echo Generating pre-compiled header for $<
-	@$(CXX) $(CFLAGS) $(WARNINGS) $(INCLUDES) $<
+	$(CXX) $(CFLAGS) $(WARNINGS) $(INCLUDES) $<
 
 .SUFFIXES: .cpp .c .o
 
